services:
  web:
    image: mhdasjad/movie_ticket-web:latest
    command: ["gunicorn", "--bind", ":8000", "Backend.wsgi:application"]
    container_name: django_backend
    depends_on:
        db:
          condition: service_healthy
    restart : always   
    env_file:
      - .env
    environment:
    - SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=${SOCIAL_AUTH_GOOGLE_OAUTH2_KEY}
    - SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=${SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET}
    - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
    - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
    - PALPAL_API_URL=${PALPAL_API_URL}
    - GEMINI_API_SECRET=${GEMINI_API_SECRET}
    
    volumes :
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media

    networks:
      - backend-network

  db:
    image: mhdasjad/postgres-db:14
    container_name: postgres_db
    volumes:
      - db_data:/var/lib/postgresql/data/
    restart : always
    ports:
      - "5432:5432"

    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

volumes:
  db_data:
  static_volume:
  media_volume:

networks:
  backend-network:
    driver: bridge